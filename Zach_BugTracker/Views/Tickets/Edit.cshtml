@model Zach_BugTracker.Models.Ticket

@{
    ViewBag.Title = "Edit";
}




<!--New Edit Table=========================================================================================================================================-->




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()



    <div class="advanced-form-area mg-b-15">
        <div class="container-fluid">

            <div class="row">
                <div class="col-lg-12">
                    <div class="sparkline10-list shadow-reset mg-t-30">
                        <div class="sparkline10-hd">
                            <div class="main-sparkline10-hd">
                                <h1>Edit Ticket</h1>
                                <div class="sparkline10-outline-icon">
                                    <span class="sparkline10-collapse-link"><i class="fa fa-chevron-up"></i></span>
                                </div>
                            </div>
                        </div>
                        <div class="sparkline10-graph">
                            <div class="input-knob-dial-wrap">
                                <div class="row">
                                    <div class="col-lg-12">
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        @Html.HiddenFor(model => model.Id)
                                        @Html.HiddenFor(model => model.Created)
                                        @Html.HiddenFor(model => model.ProjectId)

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10 mg-b-20">
                                                @Html.DisplayFor(model => model.Title)
                                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        @if (User.IsInRole("Submitter") | (User.IsInRole("DemoSubmitter")))
                                        {
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.TicketStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-10 mg-b-20">
                                                    @Html.DisplayFor(model => model.TicketStatus.StatusName)
                                                    @Html.ValidationMessageFor(model => model.TicketStatus, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        }

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.SubmitterId, "Submitter", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10 mg-b-20">
                                                @Html.DisplayFor(model => model.Submitter.FullName)
                                                @Html.ValidationMessageFor(model => model.SubmitterId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.DeveloperId, "Developer", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10 mg-b-20">
                                                @Html.DisplayFor(model => model.Developer.FullName)
                                                @Html.ValidationMessageFor(model => model.DeveloperId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10 mg-b-20">
                                                @Html.DisplayFor(model => model.Created)
                                                @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
                                            </div>
                                        </div>


                                        <div class="form-group">
                                            @Html.LabelFor(model => model.TicketTypeId, "TicketTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10 mg-b-20">
                                                @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.TicketPriorityId, "TicketPriorityId", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10 mg-b-20">
                                                @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        @if (User.IsInRole("Developer") | (User.IsInRole("DemoDeveloper")))
                                        {
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.TicketStatusId, "TicketStatusId", htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-10 mg-b-20">
                                                    @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                        }

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10 mg-b-20">
                                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                            </div>
                                        </div>



                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div class="col-md-5">

                                                    </div>
                                                    <div class="col-md-2">
                                                        <input type="submit" value="Save Changes" class="btn-lg btn-success" />
                                                    </div>
                                                    <div class="col-md-5">

                                                    </div>
                                                </div>
                                            </div>
                                        </div>


                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<!--End Edit Table=======================================================================================================================-->

<div class="row" align="center">
    <h4 style="font:oblique">
        | @Html.ActionLink("Return To My Tickets", "Index", "Tickets") |
    </h4>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}











